% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_learner.R
\name{divide_periods}
\alias{divide_periods}
\title{Cut a vector into groups based on numeric or time data}
\usage{
divide_periods(nu, ngroup, unit = NULL, cutpoint = FALSE, toint = FALSE)
}
\arguments{
\item{nu}{numeric\link{POSIXt or Date}. Vector to be cut into groups.}

\item{ngroup}{integer(1). Specifying the number of groups into
which \code{nu} should be divided.}

\item{unit}{character(1). The semantic time unit for processing time data.
Supported units are \code{"year"}, \code{"halfyear"}, \code{"quarter"},
and \code{"month"}. This parameter is required if \code{nu} is
a vector of dates/times.}

\item{cutpoint}{logical(1). if \code{TRUE}, the function returns
the cutpoints defining the groups.
Default is \code{FALSE}.}

\item{toint}{logical(1). if \code{TRUE}, the resulting factor
(if \code{cutpoint = FALSE}) is converted to integer indices.
Default is \code{FALSE}.}
}
\value{
Depending on the parameters:
\itemize{
\item If \code{cutpoint = TRUE}, a vector of cutpoints
(numeric for numeric input, or of class \code{POSIXct} /
\code{Date} for time input) is returned.
\item Otherwise, a factor (or integer if \code{toint = TRUE})
indicating the group assignment for each element in \code{nu}.
}
}
\description{
This function divides a numeric vector or a vector of dates/times (of class
\code{POSIXt} or \code{Date}) into a specified number of groups.
For time data, the grouping is performed using semantic time arithmetic
provided by the \code{lubridate} package.
For numeric data, a simple even split is performed.
}
\details{
When processing time data,
the function calculates intervals in months based on
the specified semantic unit (e.g., "year", "halfyear", "quarter", "month").
It then determines cutpoints that divide the range of times into
\code{ngroup} intervals. If \code{cutpoint = TRUE}, the function returns
the calculated cutpoints; otherwise, it returns a factor (or integer if
\code{toint = TRUE}) that indicates the group for each element in \code{nu}.

For numeric input, the maximum value of \code{nu} is used to create
evenly sized intervals. If \code{cutpoint = TRUE}, the function returns
the numeric cutpoints; otherwise, it returns a factor
(or integer if \code{toint = TRUE}) indicating the group.

For time inputs, the function computes the total duration (in months) between
the minimum and maximum time points. It then divides this duration into
\code{ngroup} intervals, snapping the base interval to the nearest multiple
of the semantic unit's length. Any remaining months are distributed
in full chunks (of length equal to the semantic unit) starting from
the last group.

For numeric inputs, the function computes evenly spaced intervals based on
the maximum value of \code{nu}.
}
\note{
For time data, the \code{lubridate} package must be installed
and available.
}
\examples{
\dontrun{
# Example with POSIXct time data
times <-
  seq(as.POSIXct("2020-01-01"), as.POSIXct("2021-01-01"), by = "month")
# Cut into 4 groups by month-based intervals
groups <- divide_periods(times, ngroup = 4, unit = "month")

# Return cutpoints instead of group assignments
cutpts <- divide_periods(times, ngroup = 4, unit = "month", cutpoint = TRUE)

# Example with numeric data
nums <- 1:100
groups_num <- divide_periods(nums, ngroup = 5)
}

}
