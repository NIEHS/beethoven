% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_learner.R
\name{generate_cv_index_spt}
\alias{generate_cv_index_spt}
\title{Generate spatio-temporal cross-validation index with anticlust}
\usage{
generate_cv_index_spt(
  data,
  target_cols = c("lon", "lat", "time"),
  preprocessing = c("none", "normalize", "standardize"),
  ngroup_init = 5L,
  cv_pairs = NULL,
  pairing = c("1", "2"),
  ...
)
}
\arguments{
\item{data}{data.table with X, Y, and time information.}

\item{target_cols}{character(3). Names of columns for X, Y, and time.
Default is c("lon", "lat", "time"). Order insensitive.}

\item{preprocessing}{character(1). Preprocessing method for the fields
defined in \code{target_cols}. This serves to homogenize the scale of
the data. Default is "none".
\itemize{
\item "none": no preprocessing.
\item "normalize": normalize the data.
\item "standardize": standardize the data.
}}

\item{ngroup_init}{integer(1). Initial number of splits for
pairing groups. Default is 5L.}

\item{cv_pairs}{integer(1). Number of pairs for cross-validation.
This value will be used to generate a rank-based pairs
based on \code{target_cols} values.}

\item{pairing}{character(1) Pair selection method.
\itemize{
\item "1": search the nearest for each cluster then others
are selected based on the rank.
\item "2": rank the pairwise distances directly
}}

\item{...}{Additional arguments to be passed.}
}
\value{
List of numeric vectors with balanced cluster numbers and
reference lists of assessment set pair numbers in attributes.
}
\description{
This function generates a spatio-temporal cross-validation index
based on the anticlust package. The function first calculates the
spatial clustering index using the \code{\link[anticlust:balanced_clustering]{anticlust::balanced_clustering()}}
function as default, and if \code{cv_pairs} is provided, it generates rank-based
pairs based on the proximity between cluster centroids.
\code{cv_pairs} can be NULL, in which case only the spatial clustering index
is generated. \code{ngroup_init} should be lower than \code{cv_pairs}, while
it imposes a condition that \code{nrow(data) \%\% ngroup_init} should be 0
and \code{cv_pairs} should be less than the number of 2-combinations of
\code{ngroup_init}. Each training set will get 50\% overlap
with adjacent training sets. "Pairs (combinations)" are selected
based on the rank of centroids of \code{ngroup_init} number of initial
clusters, where users have two options.
}
\details{
\itemize{
\item Mode "1" assigns at least one pair for each
initial cluster, meaning that \code{ngroup_init} pairs are assigned for each
initial cluster, then the remaining pairs will be ranked to finalize
the \code{cv_pairs} sets.
\item Mode "2" will rank the pairwise distances
directly, which may ignore some overly large initial clusters for pairing.
}

Of course, mode "2" is faster than mode "1", thus users are advised
to use mode "2" when they are sure that the initial clusters are
spatially uniformly distributed.
}
\note{
\code{nrow(data) \%\% ngroup_init} should be 0. This is a required
condition for the anticlust::balanced_clustering().
}
\examples{
library(data.table)
data <- data.table(
  lon = runif(100),
  lat = runif(100),
  time =
  rep(
    seq.Date(from = as.Date("2021-01-01"), to = as.Date("2021-01-05"),
             by = "day"),
    20
  )
)
rset_spt <-
  generate_cv_index_spt(
    data, preprocessing = "normalize",
    ngroup_init = 5L, cv_pairs = 6L
  )
rset_spt
}
\author{
Insang Song
}
\keyword{Baselearner}
