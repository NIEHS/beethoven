% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_base_functions.R
\name{post_calc_df_year_expand}
\alias{post_calc_df_year_expand}
\title{Expand a data frame by year}
\usage{
post_calc_df_year_expand(
  df,
  locs_id = "site_id",
  time_field = "time",
  time_start = NULL,
  time_end = NULL,
  time_unit = "year",
  time_available = NULL,
  ...
)
}
\arguments{
\item{df}{The input data frame.}

\item{locs_id}{The column name of the location identifier in the data frame.}

\item{time_field}{The column name of the time field in the data frame.}

\item{time_start}{The start of the time period.}

\item{time_end}{The end of the time period.}

\item{time_unit}{The unit of time to expand the data frame. Only for record.}

\item{time_available}{A vector of available time periods.}

\item{...}{Placeholders.}
}
\value{
The expanded data frame with multiple rows for each year.
}
\description{
This function expands a data frame by year, creating multiple rows
for each year based on the time period specified.
}
\note{
Year expansion rule is to assign the nearest past year
in the available years;#' if there is no past year in the available years,
the first available year is rolled back to the start of the time period.
}
\examples{
df <- data.frame(year = c(2010, 2010, 2011, 2012),
                 value = c(1, 2, 3, 4))
df_expanded <- df_year_expand(df, locs_id = "site_id", time_field = "year",
                              time_start = 2011, time_end = 2012,
                              time_unit = "year")
print(df_expanded)
}
\seealso{
\code{\link[=post_calc_year_expand]{post_calc_year_expand()}}
}
\keyword{Post-calculation}
